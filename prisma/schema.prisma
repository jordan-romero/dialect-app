

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DEV_POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("DEV_POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Define the User model
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  courses   Course[]
}

// Define the Course model
model Course {
  id               Int      @id @default(autoincrement())
  title            String
  moduleList       String   // You can specify the format for moduleList
  gatingMechanism  Boolean  @default(false)
  completedStatus  Boolean  @default(false)
  userId           Int
  user             User     @relation(fields: [userId], references: [id])
  modules          Module[]
}

// Define the Module model
model Module {
  id              Int      @id @default(autoincrement())
  title           String
  completedStatus Boolean  @default(false)
  courseId        Int
  course          Course   @relation(fields: [courseId], references: [id])
  resources       Resource[]
  homework        Homework[]
}

// Define the Resource model
model Resource {
  id      Int     @id @default(autoincrement())
  name    String
  url     String
  moduleId Int
  module  Module  @relation(fields: [moduleId], references: [id])
}

// Define the Homework model
model Homework {
  id      Int     @id @default(autoincrement())
  title   String
  moduleId Int
  module  Module  @relation(fields: [moduleId], references: [id])
}
